{
  "contractName": "OracleIteratorRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "AddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "generateKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"AddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"generateKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/OracleIteratorRegistry.sol\":\"OracleIteratorRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/oracleIterators/IOracleIterator.sol\":{\"keccak256\":\"0x129af0ba343ea950e2f00eead6b9103f3bd623a6a605da69e7160c61f2a0da6e\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://9a24caca9cc52b1b9768bc97fb4ded912e5c4ccdd1a6039252a76c8217933ea0\",\"dweb:/ipfs/QmWjJUVPUsuHB7xErwL4HTJXudtWnBcx4RXqmHqZyz16Vf\"]},\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/AddressRegistryParent.sol\":{\"keccak256\":\"0x4ff581622d7232d27630308c9cddf4b129207824d5151575ce36a15127b255bf\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://2b6837558401d084e11eb285c6d7c070a3c28303860c276d82777e226c23d9b7\",\"dweb:/ipfs/QmajoHJQxTk2CtS66MC2CuTnvK4rwSnmJWkf7SANecXRbD\"]},\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/IAddressRegistry.sol\":{\"keccak256\":\"0xc67aaff6a08c4ee71937c285a5c93e16f5ea6ee486565b9ee52fc005a13b4fa6\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://eddfb417a1bde49a7b40ccd7d150c44df37dad9b98b9cb0040211cc41d9e6534\",\"dweb:/ipfs/QmUtvRYQjgS8rgE6kzwquGN3WW8Kb8QzqUHSiCgzqZq3YP\"]},\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/OracleIteratorRegistry.sol\":{\"keccak256\":\"0x7955f8eea6f760a3aa8c8bdd95908a05e4e77426178007e023ca603b989d25d6\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://ad85709242f2ebaf348108319c459a70a5a73057f53e5fa4934df9ceee84eb83\",\"dweb:/ipfs/QmUe8RHQ4nMBe6cNgcy8WY1WqXZn6fhQmvFc5BTkauaawP\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6109cc8061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100f95780638eaa6ac01461012a578063f2fde38b1461014757610072565b80632801617e1461007757806356ddf67b146100ac578063715018a6146100f1575b600080fd5b6100aa6004803603602081101561008d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661017a565b005b6100df600480360360208110156100c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102c5565b60408051918252519081900360200190f35b6100aa610587565b610101610687565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101016004803603602081101561014057600080fd5b50356106a3565b6100aa6004803603602081101561015d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106cb565b610182610855565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461020b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000610216826102c5565b90506102228183610859565b6040805182815273ffffffffffffffffffffffffffffffffffffffff8416602082015281517f3eb532562a19423f49e2e3b30790b23d00c625f3ee37c7359d03688bf7111f6c929181900390910190a1600090815260016020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff166312df4d3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030d57600080fd5b505afa158015610321573d6000803e3d6000fd5b505050506040513d602081101561033757600080fd5b50516103a457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f53686f756c64206265206f7261636c65206974657261746f7200000000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052602081101561044557600080fd5b810190808051604051939291908464010000000082111561046557600080fd5b90830190602082018581111561047a57600080fd5b825164010000000081118282018810171561049457600080fd5b82525081516020918201929091019080838360005b838110156104c15781810151838201526020016104a9565b50505050905090810190601f1680156104ee5780820380516001836020036101000a031916815260200191505b506040525050506040516020018082805190602001908083835b6020831061054557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610508565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b61058f610855565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461061857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6106d3610855565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461075c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109716026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff81166108db57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e756c6c61626c65206164647265737300000000000000000000000000000000604482015290519081900360640190fd5b60008281526001602052604090205473ffffffffffffffffffffffffffffffffffffffff161561096c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b657920616c7265616479206578697374730000000000000000000000000000604482015290519081900360640190fd5b505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f4e0f78cbc3016161f4c95b7f4fcbfd9d7c30c6cb0b6ee8dddf125b1257d6e8064736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100f95780638eaa6ac01461012a578063f2fde38b1461014757610072565b80632801617e1461007757806356ddf67b146100ac578063715018a6146100f1575b600080fd5b6100aa6004803603602081101561008d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661017a565b005b6100df600480360360208110156100c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102c5565b60408051918252519081900360200190f35b6100aa610587565b610101610687565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101016004803603602081101561014057600080fd5b50356106a3565b6100aa6004803603602081101561015d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106cb565b610182610855565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461020b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000610216826102c5565b90506102228183610859565b6040805182815273ffffffffffffffffffffffffffffffffffffffff8416602082015281517f3eb532562a19423f49e2e3b30790b23d00c625f3ee37c7359d03688bf7111f6c929181900390910190a1600090815260016020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff166312df4d3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030d57600080fd5b505afa158015610321573d6000803e3d6000fd5b505050506040513d602081101561033757600080fd5b50516103a457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f53686f756c64206265206f7261636c65206974657261746f7200000000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052602081101561044557600080fd5b810190808051604051939291908464010000000082111561046557600080fd5b90830190602082018581111561047a57600080fd5b825164010000000081118282018810171561049457600080fd5b82525081516020918201929091019080838360005b838110156104c15781810151838201526020016104a9565b50505050905090810190601f1680156104ee5780820380516001836020036101000a031916815260200191505b506040525050506040516020018082805190602001908083835b6020831061054557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610508565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b61058f610855565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461061857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6106d3610855565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461075c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109716026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff81166108db57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e756c6c61626c65206164647265737300000000000000000000000000000000604482015290519081900360640190fd5b60008281526001602052604090205473ffffffffffffffffffffffffffffffffffffffff161561096c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b657920616c7265616479206578697374730000000000000000000000000000604482015290519081900360640190fd5b505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f4e0f78cbc3016161f4c95b7f4fcbfd9d7c30c6cb0b6ee8dddf125b1257d6e8064736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "176:319:45:-:0;;;;;;;;;;;;-1:-1:-1;865:17:65;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:65;-1:-1:-1;;;;;907:18:65;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:65;940:43;;907:6;;940:43;831:159;176:319:45;;590:104:63;677:10;590:104;:::o;176:319:45:-;;;;;;;",
  "deployedSourceMap": "176:319:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:211:40;;;;;;;;;;;;;;;;-1:-1:-1;499:211:40;;;;:::i;:::-;;239:254:45;;;;;;;;;;;;;;;;-1:-1:-1;239:254:45;;;;:::i;:::-;;;;;;;;;;;;;;;;1689:145:65;;;:::i;1066:77::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;716:106:40;;;;;;;;;;;;;;;;-1:-1:-1;716:106:40;;:::i;1983:240:65:-;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:65;;;;:::i;499:211:40:-;1280:12:65;:10;:12::i;:::-;1270:6;;:22;:6;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:11:40::1;582:19;594:6;582:11;:19::i;:::-;568:33;;611:19;618:3;623:6;611;:19::i;:::-;645:25;::::0;;;;;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;680:14;::::0;;;:9:::1;:14;::::0;;;;:23;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;499:211::o;239:254:45:-;305:12;352:6;336:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;336:42:45;328:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:6;452:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:32:45;;;;;;;;;;-1:-1:-1;452:32:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:61;;;;;;418:68;;239:254;;;:::o;1689:145:65:-;1280:12;:10;:12::i;:::-;1270:6;;:22;:6;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;::::1;1779:6:::0;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;;::::1;::::0;;1689:145::o;1066:77::-;1104:7;1130:6;;;1066:77;:::o;716:106:40:-;774:7;800:15;;;:9;:15;;;;;;;;;716:106::o;1983:240:65:-;1280:12;:10;:12::i;:::-;1270:6;;:22;:6;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2071:22:::1;::::0;::::1;2063:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;::::1;::::0;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1983:240::o;590:104:63:-;677:10;590:104;:::o;828:199:40:-;909:20;;;901:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:1;968:15;;;:9;:15;;;;;;:29;:15;:29;960:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:199;;:::o",
  "source": "// \"SPDX-License-Identifier: GNU General Public License v3.0\"\n\npragma solidity 0.6.12;\n\nimport \"./AddressRegistryParent.sol\";\nimport \"../oracleIterators/IOracleIterator.sol\";\n\ncontract OracleIteratorRegistry is AddressRegistryParent {\n    function generateKey(address _value) public override view returns(bytes32 _key){\n        require(IOracleIterator(_value).isOracleIterator(), \"Should be oracle iterator\");\n        return keccak256(abi.encodePacked(IOracleIterator(_value).symbol()));\n    }\n}\n",
  "sourcePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/OracleIteratorRegistry.sol",
  "ast": {
    "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/OracleIteratorRegistry.sol",
    "exportedSymbols": {
      "OracleIteratorRegistry": [
        7213
      ]
    },
    "id": 7214,
    "license": "GNU General Public License v3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7179,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:45"
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/AddressRegistryParent.sol",
        "file": "./AddressRegistryParent.sol",
        "id": 7180,
        "nodeType": "ImportDirective",
        "scope": 7214,
        "sourceUnit": 7012,
        "src": "88:37:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/oracleIterators/IOracleIterator.sol",
        "file": "../oracleIterators/IOracleIterator.sol",
        "id": 7181,
        "nodeType": "ImportDirective",
        "scope": 7214,
        "sourceUnit": 6816,
        "src": "126:48:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7182,
              "name": "AddressRegistryParent",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7011,
              "src": "211:21:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressRegistryParent_$7011",
                "typeString": "contract AddressRegistryParent"
              }
            },
            "id": 7183,
            "nodeType": "InheritanceSpecifier",
            "src": "211:21:45"
          }
        ],
        "contractDependencies": [
          7011,
          7177,
          8751,
          9143
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7213,
        "linearizedBaseContracts": [
          7213,
          7011,
          7177,
          9143,
          8751
        ],
        "name": "OracleIteratorRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              6936
            ],
            "body": {
              "id": 7211,
              "nodeType": "Block",
              "src": "318:175:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7193,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7185,
                                "src": "352:6:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7192,
                              "name": "IOracleIterator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6815,
                              "src": "336:15:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IOracleIterator_$6815_$",
                                "typeString": "type(contract IOracleIterator)"
                              }
                            },
                            "id": 7194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "336:23:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOracleIterator_$6815",
                              "typeString": "contract IOracleIterator"
                            }
                          },
                          "id": 7195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOracleIterator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6795,
                          "src": "336:40:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                            "typeString": "function () pure external returns (bool)"
                          }
                        },
                        "id": 7196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "336:42:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53686f756c64206265206f7261636c65206974657261746f72",
                        "id": 7197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "380:27:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584ff38ac766a3a353cebf2c628ce2485c5031a1603373f7d63371f80290bcd3",
                          "typeString": "literal_string \"Should be oracle iterator\""
                        },
                        "value": "Should be oracle iterator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584ff38ac766a3a353cebf2c628ce2485c5031a1603373f7d63371f80290bcd3",
                          "typeString": "literal_string \"Should be oracle iterator\""
                        }
                      ],
                      "id": 7191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "328:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:80:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7199,
                  "nodeType": "ExpressionStatement",
                  "src": "328:80:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7204,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7185,
                                    "src": "468:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7203,
                                  "name": "IOracleIterator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6815,
                                  "src": "452:15:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IOracleIterator_$6815_$",
                                    "typeString": "type(contract IOracleIterator)"
                                  }
                                },
                                "id": 7205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "452:23:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOracleIterator_$6815",
                                  "typeString": "contract IOracleIterator"
                                }
                              },
                              "id": 7206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6801,
                              "src": "452:30:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure external returns (string memory)"
                              }
                            },
                            "id": 7207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "452:32:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7201,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "435:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "435:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "435:50:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7200,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "425:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:61:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7190,
                  "id": 7210,
                  "nodeType": "Return",
                  "src": "418:68:45"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "56ddf67b",
            "id": 7212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateKey",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7187,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "283:8:45"
            },
            "parameters": {
              "id": 7186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7185,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7212,
                  "src": "260:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:16:45"
            },
            "returnParameters": {
              "id": 7190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7189,
                  "mutability": "mutable",
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7212,
                  "src": "305:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7188,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:14:45"
            },
            "scope": 7213,
            "src": "239:254:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7214,
        "src": "176:319:45"
      }
    ],
    "src": "63:433:45"
  },
  "legacyAST": {
    "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/OracleIteratorRegistry.sol",
    "exportedSymbols": {
      "OracleIteratorRegistry": [
        7213
      ]
    },
    "id": 7214,
    "license": "GNU General Public License v3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7179,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:45"
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/registries/AddressRegistryParent.sol",
        "file": "./AddressRegistryParent.sol",
        "id": 7180,
        "nodeType": "ImportDirective",
        "scope": 7214,
        "sourceUnit": 7012,
        "src": "88:37:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/oracleIterators/IOracleIterator.sol",
        "file": "../oracleIterators/IOracleIterator.sol",
        "id": 7181,
        "nodeType": "ImportDirective",
        "scope": 7214,
        "sourceUnit": 6816,
        "src": "126:48:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7182,
              "name": "AddressRegistryParent",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7011,
              "src": "211:21:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressRegistryParent_$7011",
                "typeString": "contract AddressRegistryParent"
              }
            },
            "id": 7183,
            "nodeType": "InheritanceSpecifier",
            "src": "211:21:45"
          }
        ],
        "contractDependencies": [
          7011,
          7177,
          8751,
          9143
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7213,
        "linearizedBaseContracts": [
          7213,
          7011,
          7177,
          9143,
          8751
        ],
        "name": "OracleIteratorRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              6936
            ],
            "body": {
              "id": 7211,
              "nodeType": "Block",
              "src": "318:175:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7193,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7185,
                                "src": "352:6:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7192,
                              "name": "IOracleIterator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6815,
                              "src": "336:15:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IOracleIterator_$6815_$",
                                "typeString": "type(contract IOracleIterator)"
                              }
                            },
                            "id": 7194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "336:23:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOracleIterator_$6815",
                              "typeString": "contract IOracleIterator"
                            }
                          },
                          "id": 7195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOracleIterator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6795,
                          "src": "336:40:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                            "typeString": "function () pure external returns (bool)"
                          }
                        },
                        "id": 7196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "336:42:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53686f756c64206265206f7261636c65206974657261746f72",
                        "id": 7197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "380:27:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584ff38ac766a3a353cebf2c628ce2485c5031a1603373f7d63371f80290bcd3",
                          "typeString": "literal_string \"Should be oracle iterator\""
                        },
                        "value": "Should be oracle iterator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584ff38ac766a3a353cebf2c628ce2485c5031a1603373f7d63371f80290bcd3",
                          "typeString": "literal_string \"Should be oracle iterator\""
                        }
                      ],
                      "id": 7191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "328:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:80:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7199,
                  "nodeType": "ExpressionStatement",
                  "src": "328:80:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7204,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7185,
                                    "src": "468:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7203,
                                  "name": "IOracleIterator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6815,
                                  "src": "452:15:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IOracleIterator_$6815_$",
                                    "typeString": "type(contract IOracleIterator)"
                                  }
                                },
                                "id": 7205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "452:23:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOracleIterator_$6815",
                                  "typeString": "contract IOracleIterator"
                                }
                              },
                              "id": 7206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6801,
                              "src": "452:30:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure external returns (string memory)"
                              }
                            },
                            "id": 7207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "452:32:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7201,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "435:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "435:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "435:50:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7200,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "425:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:61:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7190,
                  "id": 7210,
                  "nodeType": "Return",
                  "src": "418:68:45"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "56ddf67b",
            "id": 7212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateKey",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7187,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "283:8:45"
            },
            "parameters": {
              "id": 7186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7185,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7212,
                  "src": "260:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:16:45"
            },
            "returnParameters": {
              "id": 7190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7189,
                  "mutability": "mutable",
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7212,
                  "src": "305:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7188,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:14:45"
            },
            "scope": 7213,
            "src": "239:254:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7214,
        "src": "176:319:45"
      }
    ],
    "src": "63:433:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "1604409002293": {
      "events": {
        "0x3eb532562a19423f49e2e3b30790b23d00c625f3ee37c7359d03688bf7111f6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_value",
              "type": "address"
            }
          ],
          "name": "AddressAdded",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x580a10f17dc7E38B6628DE1a87745bd95C411324",
      "transactionHash": "0x4522b551f416db03205bef2ea92d52152978fb49095f34fea577d4280db9f385"
    },
    "1604409614609": {
      "events": {
        "0x3eb532562a19423f49e2e3b30790b23d00c625f3ee37c7359d03688bf7111f6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_value",
              "type": "address"
            }
          ],
          "name": "AddressAdded",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x26Ed1B12349784846A48d5B33707Df4Bf91edc17",
      "transactionHash": "0x141a5d9c6185071e2f01a9f5a3e7db71582e53f8e6fea920ff62327d11831667"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-03T13:23:46.091Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}