{
  "contractName": "InsurSplit",
  "abi": [
    {
      "inputs": [],
      "name": "FRACTION_MULTIPLIER",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "NEGATIVE_INFINITY",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isCollateralSplit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_u_0",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "_u_T",
          "type": "int256"
        }
      ],
      "name": "normalize",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_split",
          "type": "int256"
        }
      ],
      "name": "range",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_oracles",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_oracleIterators",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_liveTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_settleTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_underlyingStartRoundHints",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_underlyingEndRoundHints",
          "type": "uint256[]"
        }
      ],
      "name": "split",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_split",
          "type": "uint256"
        },
        {
          "internalType": "int256[]",
          "name": "_underlyingStarts",
          "type": "int256[]"
        },
        {
          "internalType": "int256[]",
          "name": "_underlyingEnds",
          "type": "int256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_normalizedValue",
          "type": "int256"
        }
      ],
      "name": "splitNominalValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FRACTION_MULTIPLIER\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NEGATIVE_INFINITY\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCollateralSplit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_u_0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_u_T\",\"type\":\"int256\"}],\"name\":\"normalize\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_split\",\"type\":\"int256\"}],\"name\":\"range\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_oracles\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_oracleIterators\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_liveTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_settleTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_underlyingStartRoundHints\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_underlyingEndRoundHints\",\"type\":\"uint256[]\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_split\",\"type\":\"uint256\"},{\"internalType\":\"int256[]\",\"name\":\"_underlyingStarts\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"_underlyingEnds\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_normalizedValue\",\"type\":\"int256\"}],\"name\":\"splitNominalValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isCollateralSplit()\":{\"details\":\"Verifies that contract is a collateral split contract\",\"returns\":{\"_0\":\"true if contract is a collateral split contract\"}},\"split(address[],address[],uint256,uint256,uint256[],uint256[])\":{\"details\":\"Returns ranged value between 0 and 1 multiplied by 10 ^ 12\",\"params\":{\"_underlyingEndRoundHints\":\"specify for each oracle round of the end of Live period\",\"_underlyingStartRoundHints\":\"specify for each oracle round of the start of Live period\"},\"returns\":{\"_split\":\"primary asset class' share of collateral at settlement\",\"_underlyingEnds\":\"underlying values in the end of Live period\",\"_underlyingStarts\":\"underlying values in the start of Live period\"}},\"symbol()\":{\"details\":\"Should be resolved through CollateralSplitRegistry contract\",\"returns\":{\"_0\":\"collateral split specification symbol\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isCollateralSplit()\":{\"notice\":\"Proof of collateral split contract\"},\"split(address[],address[],uint256,uint256,uint256[],uint256[])\":{\"notice\":\"Calcs primary asset class' share of collateral at settlement.\"},\"symbol()\":{\"notice\":\"Symbol of the collateral split\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/InsurSplit.sol\":\"InsurSplit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/CollateralSplitParent.sol\":{\"keccak256\":\"0x926c5c5b339b69c1d89b8974be5b38031c6dc103ce67b9190a514ae1bb661eba\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://ece3aed5ad050b936390b8536879db87ec4742c9c2764d4677d0e1a597465d9a\",\"dweb:/ipfs/Qmdu3VkyFFAWhZaJup4C636Tp2Frhc9Gw5yoEdhUHNSevH\"]},\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/ICollateralSplit.sol\":{\"keccak256\":\"0x9eceee71e142cd04b71813212f73781f0b52853712fee77563a911b698e6deed\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://4a204ebef4440df972a5b987b3aefa7c995989a62eed7a8bc0a959fb0122ccd1\",\"dweb:/ipfs/QmbjQfLBtXp2gr48GvUskztskmP9B69WKrSqiaM5D71FjQ\"]},\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/InsurSplit.sol\":{\"keccak256\":\"0x411048a3412b2809b9297efef29088e985cf8e91d7b78253c53a482afb067ff6\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://5661df6d46b3907af5fac562921d2694448e82982e139fede972562c911c0f73\",\"dweb:/ipfs/QmSMPgNZqBk1imvBLzk6733c5qVtpsSS81zNnZudKb6zhM\"]},\"/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/oracleIterators/IOracleIterator.sol\":{\"keccak256\":\"0x129af0ba343ea950e2f00eead6b9103f3bd623a6a605da69e7160c61f2a0da6e\",\"license\":\"GNU General Public License v3.0\",\"urls\":[\"bzz-raw://9a24caca9cc52b1b9768bc97fb4ded912e5c4ccdd1a6039252a76c8217933ea0\",\"dweb:/ipfs/QmWjJUVPUsuHB7xErwL4HTJXudtWnBcx4RXqmHqZyz16Vf\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0x92bf2cb99019349965d5a05c407edebcc8d02d75b8a663d8a6990024ccdea2c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d55c57e6be696c9a89eab4227087ca8d28ac15153fd3c50020821bcb46cc2c00\",\"dweb:/ipfs/Qmb7h95SMmy2ZoivpbCGqHW3qRRUHwsAo8L57X64c75B26\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611055806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b7580bc31161005b578063b7580bc314610164578063bb18850714610180578063df443f751461045b578063dfd105cb1461047857610088565b806305b24a711461008d5780631e18b7b2146100bc5780634dcd7dee146100df57806395d89b41146100e7575b600080fd5b6100aa600480360360208110156100a357600080fd5b5035610480565b60408051918252519081900360200190f35b6100aa600480360360408110156100d257600080fd5b50803590602001356104b2565b6100aa61067b565b6100ef61069f565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610129578181015183820152602001610111565b50505050905090810190601f1680156101565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61016c6106d6565b604080519115158252519081900360200190f35b6103bb600480360360c081101561019657600080fd5b8101906020810181356401000000008111156101b157600080fd5b8201836020820111156101c357600080fd5b803590602001918460208302840111640100000000831117156101e557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561023557600080fd5b82018360208201111561024757600080fd5b8035906020019184602083028401116401000000008311171561026957600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092958435956020860135959194509250606081019150604001356401000000008111156102c557600080fd5b8201836020820111156102d757600080fd5b803590602001918460208302840111640100000000831117156102f957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561034957600080fd5b82018360208201111561035b57600080fd5b8035906020019184602083028401116401000000008311171561037d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506106db945050505050565b604051808481526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156104055781810151838201526020016103ed565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561044457818101518382015260200161042c565b505050509050019550505050505060405180910390f35b6100aa6004803603602081101561047157600080fd5b5035610c53565b6100aa610cee565b600064e8d4a51000821261049a575064e8d4a510006104ad565b600082136104aa575060006104ad565b50805b919050565b60007f800000000000000000000000000000000000000000000000000000000000000083141561054357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f755f3020697320616273656e7400000000000000000000000000000000000000604482015290519081900360640190fd5b7f80000000000000000000000000000000000000000000000000000000000000008214156105d257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f755f5420697320616273656e7400000000000000000000000000000000000000604482015290519081900360640190fd5b6000831361064157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f755f30206973206c657373206f7220657175616c207a65726f00000000000000604482015290519081900360640190fd5b600082121561064f57600091505b6106728361066c64e8d4a510006106668684610cf7565b90610d76565b90610e8d565b90505b92915050565b7f800000000000000000000000000000000000000000000000000000000000000081565b60408051808201909152600581527f496e737572000000000000000000000000000000000000000000000000000000602082015290565b600190565b6000606080885160011461075057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4d6f7265207468616e206f6e65206f7261636c65000000000000000000000000604482015290519081900360640190fd5b600073ffffffffffffffffffffffffffffffffffffffff168960008151811061077557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561080057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4f7261636c6520697320656d7074790000000000000000000000000000000000604482015290519081900360640190fd5b600073ffffffffffffffffffffffffffffffffffffffff168860008151811061082557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156108b057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f7261636c65206974657261746f7220697320656d7074790000000000000000604482015290519081900360640190fd5b604080516001808252818301909252906020808301908036833750506040805160018082528183019092529294509050602080830190803683370190505090506000886000815181106108ff57fe5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff166312df4d3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561094f57600080fd5b505afa158015610963573d6000803e3d6000fd5b505050506040513d602081101561097957600080fd5b50516109e657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f74206f7261636c65206974657261746f7200000000000000000000000000604482015290519081900360640190fd5b8073ffffffffffffffffffffffffffffffffffffffff166376d68cb68b600081518110610a0f57fe5b60200260200101518a896040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610a8a578181015183820152602001610a72565b5050505090500194505050505060206040518083038186803b158015610aaf57600080fd5b505afa158015610ac3573d6000803e3d6000fd5b505050506040513d6020811015610ad957600080fd5b505183518490600090610ae857fe5b6020026020010181815250508073ffffffffffffffffffffffffffffffffffffffff166376d68cb68b600081518110610b1d57fe5b602002602001015189886040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610b98578181015183820152602001610b80565b5050505090500194505050505060206040518083038186803b158015610bbd57600080fd5b505afa158015610bd1573d6000803e3d6000fd5b505050506040513d6020811015610be757600080fd5b505182518390600090610bf657fe5b602002602001018181525050610c44610c3f610c3a85600081518110610c1857fe5b602002602001015185600081518110610c2d57fe5b60200260200101516104b2565b610c53565b610480565b93505096509650969350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffff8b95ad78008213610c88575064e8d4a510006104ad565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffff8b95ad780082138015610cb75750600082125b15610ce157600264e8d4a5100083010269d3c21bcecceda100000081610cd957fe5b0590506104ad565b600264e8d4a51000610cd9565b64e8d4a5100081565b6000818303818312801590610d0c5750838113155b80610d215750600083128015610d2157508381135b610672576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610ffc6024913960400191505060405180910390fd5b600082610d8557506000610675565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff148015610dd357507f800000000000000000000000000000000000000000000000000000000000000082145b15610e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610fd56027913960400191505060405180910390fd5b82820282848281610e3657fe5b0514610672576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610fd56027913960400191505060405180910390fd5b600081610efb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604482015290519081900360640190fd5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff148015610f4957507f800000000000000000000000000000000000000000000000000000000000000083145b15610f9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610fb46021913960400191505060405180910390fd5b6000828481610faa57fe5b0594935050505056fe5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f775369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775369676e6564536166654d6174683a207375627472616374696f6e206f766572666c6f77a26469706673582212205bd82e23bdfdef10465f70b5df87a5b934fe1ead94b6491eaac4757f343c85a164736f6c634300060c0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "127:617:16:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "127:617:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2233:256:13;;;;;;;;;;;;;;;;-1:-1:-1;2233:256:13;;:::i;:::-;;;;;;;;;;;;;;;;1839:388;;;;;;;;;;;;;;;;-1:-1:-1;1839:388:13;;;;;;;:::i;390:59::-;;;:::i;177:96:16:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:94:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;556:1183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;556:1183:13;;;;;;;;-1:-1:-1;556:1183:13;;-1:-1:-1;;556:1183:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;556:1183:13;;;;;;;;;;;;-1:-1:-1;556:1183:13;-1:-1:-1;556:1183:13;;;;-1:-1:-1;556:1183:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;556:1183:13;;;;;;;;-1:-1:-1;556:1183:13;;-1:-1:-1;;556:1183:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;556:1183:13;;-1:-1:-1;556:1183:13;;-1:-1:-1;;;;;556:1183:13:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;279:463:16;;;;;;;;;;;;;;;;-1:-1:-1;279:463:16;;:::i;333:51:13:-;;;:::i;2233:256::-;2283:7;378:6;2305;:29;2302:91;;-1:-1:-1;378:6:13;2350:32;;2302:91;2415:1;2405:6;:11;2402:49;;-1:-1:-1;2439:1:13;2432:8;;2402:49;-1:-1:-1;2475:6:13;2233:256;;;;:::o;1839:388::-;1912:6;433:16;1937:4;:25;;1929:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:16;1998:4;:25;;1990:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:1;2059:4;:8;2051:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:1;2111:4;:8;2108:46;;;2142:1;2135:8;;2108:46;2171:49;2215:4;2171:39;378:6;2171:14;:4;2215;2171:8;:14::i;:::-;:18;;:39::i;:::-;:43;;:49::i;:::-;2164:56;;1839:388;;;;;:::o;390:59::-;433:16;390:59;:::o;177:96:16:-;252:14;;;;;;;;;;;;;;;;;177:96;:::o;456:94:13:-;539:4;456:94;:::o;556:1183::-;841:11;854:33;889:31;940:8;:15;959:1;940:20;932:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:1;1003:25;;:8;1012:1;1003:11;;;;;;;;;;;;;;:25;;;;995:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:1;1066:33;;:16;1083:1;1066:19;;;;;;;;;;;;;;:33;;;;1058:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1159:15;;;1172:1;1159:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1202:15:13;;;1215:1;1202:15;;;;;;;;;1139:35;;-1:-1:-1;1215:1:13;-1:-1:-1;1202:15:13;;;;;;;;;;;-1:-1:-1;1202:15:13;1184:33;;1228:24;1271:16;1288:1;1271:19;;;;;;;;;;;;;;1228:63;;1309:8;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1309:27:13;1301:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1394:8;:26;;;1421:8;1430:1;1421:11;;;;;;;;;;;;;;1434:9;1445:26;1394:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1394:78:13;1371:20;;:17;;1389:1;;1371:20;;;;;;;;;:101;;;;;1503:8;:26;;;1530:8;1539:1;1530:11;;;;;;;;;;;;;;1543;1556:24;1503:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1503:78:13;1482:18;;:15;;1498:1;;1482:18;;;;;;;;;:99;;;;;1601:131;1620:102;1655:53;1666:17;1684:1;1666:20;;;;;;;;;;;;;;1688:15;1704:1;1688:18;;;;;;;;;;;;;;1655:9;:53::i;:::-;1620:17;:102::i;:::-;1601:5;:131::i;:::-;1592:140;;556:1183;;;;;;;;;;;:::o;279:463:16:-;357:3;394:24;374:44;;371:365;;-1:-1:-1;378:6:13;434:26:16;;371:365;499:24;480:43;;:67;;;;;546:1;527:16;:20;480:67;477:259;;;618:1;378:6:13;623:38:16;;618:44;571:41;618:44;570:94;;;;;563:101;;;;477:259;724:1;378:6:13;702:23:16;;333:51:13;378:6;333:51;:::o;2000:213:67:-;2056:6;2085:5;;;2109:6;;;;;;:16;;;2124:1;2119;:6;;2109:16;2108:38;;;;2135:1;2131;:5;:14;;;;;2144:1;2140;:5;2131:14;2100:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;483:554;539:6;779;775:45;;-1:-1:-1;808:1:67;801:8;;775:45;840:1;845:2;840:7;:27;;;;;230:7;851:1;:16;840:27;838:30;830:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:5;;;938:1;934;:5;:1;957:5;;;;;:10;949:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1497:264;1553:6;1579;1571:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1642:1;1647:2;1642:7;:27;;;;;230:7;1653:1;:16;1642:27;1640:30;1632:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:8;1734:1;1730;:5;;;;;;;1497:264;-1:-1:-1;;;;1497:264:67:o",
  "source": "// \"SPDX-License-Identifier: GNU General Public License v3.0\"\n\npragma solidity 0.6.12;\n\nimport \"./CollateralSplitParent.sol\";\n\ncontract InsurSplit is CollateralSplitParent{\n    function symbol() external override pure returns (string memory) {\n        return 'Insur';\n    }\n\n    function splitNominalValue(int _normalizedValue) public override pure returns(int){\n        if(_normalizedValue <= -(FRACTION_MULTIPLIER/2)) {\n            return FRACTION_MULTIPLIER;\n        } else if(_normalizedValue > -(FRACTION_MULTIPLIER/2) && _normalizedValue < 0) {\n            return (FRACTION_MULTIPLIER * FRACTION_MULTIPLIER) / ((2 * (FRACTION_MULTIPLIER + _normalizedValue)));\n        } else {\n            return FRACTION_MULTIPLIER / 2;\n        }\n    }\n}\n",
  "sourcePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/InsurSplit.sol",
  "ast": {
    "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/InsurSplit.sol",
    "exportedSymbols": {
      "InsurSplit": [
        2861
      ]
    },
    "id": 2862,
    "license": "GNU General Public License v3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2796,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:16"
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/CollateralSplitParent.sol",
        "file": "./CollateralSplitParent.sol",
        "id": 2797,
        "nodeType": "ImportDirective",
        "scope": 2862,
        "sourceUnit": 2725,
        "src": "88:37:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2798,
              "name": "CollateralSplitParent",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2724,
              "src": "150:21:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CollateralSplitParent_$2724",
                "typeString": "contract CollateralSplitParent"
              }
            },
            "id": 2799,
            "nodeType": "InheritanceSpecifier",
            "src": "150:21:16"
          }
        ],
        "contractDependencies": [
          2724,
          2768
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2861,
        "linearizedBaseContracts": [
          2861,
          2724,
          2768
        ],
        "name": "InsurSplit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2739
            ],
            "body": {
              "id": 2807,
              "nodeType": "Block",
              "src": "242:31:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "496e737572",
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "259:7:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_abaa08988dcd7d5d6007dd395b849abb828318bc81f5a7b6d017739745c76807",
                      "typeString": "literal_string \"Insur\""
                    },
                    "value": "Insur"
                  },
                  "functionReturnParameters": 2804,
                  "id": 2806,
                  "nodeType": "Return",
                  "src": "252:14:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "95d89b41",
            "id": 2808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2801,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "204:8:16"
            },
            "parameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:2:16"
            },
            "returnParameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2803,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2808,
                  "src": "227:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "226:15:16"
            },
            "scope": 2861,
            "src": "177:96:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2642
            ],
            "body": {
              "id": 2859,
              "nodeType": "Block",
              "src": "361:381:16",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "_normalizedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "374:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "394:24:16",
                      "subExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2817,
                              "name": "FRACTION_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2486,
                              "src": "396:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "416:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "396:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "id": 2820,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "395:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "374:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2826,
                          "name": "_normalizedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2810,
                          "src": "480:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "499:24:16",
                          "subExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2827,
                                  "name": "FRACTION_MULTIPLIER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2486,
                                  "src": "501:19:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 2828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "521:1:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "501:21:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "id": 2830,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "500:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "480:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2833,
                          "name": "_normalizedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2810,
                          "src": "527:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "546:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "527:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "480:67:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2856,
                      "nodeType": "Block",
                      "src": "681:55:16",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2852,
                              "name": "FRACTION_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2486,
                              "src": "702:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "724:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "702:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 2815,
                          "id": 2855,
                          "nodeType": "Return",
                          "src": "695:30:16"
                        }
                      ]
                    },
                    "id": 2857,
                    "nodeType": "IfStatement",
                    "src": "477:259:16",
                    "trueBody": {
                      "id": 2851,
                      "nodeType": "Block",
                      "src": "549:126:16",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 2839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2837,
                                    "name": "FRACTION_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2486,
                                    "src": "571:19:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 2838,
                                    "name": "FRACTION_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2486,
                                    "src": "593:19:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "src": "571:41:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "id": 2840,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "570:43:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      },
                                      "id": 2846,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 2841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "618:1:16",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "components": [
                                          {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            },
                                            "id": 2844,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 2842,
                                              "name": "FRACTION_MULTIPLIER",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2486,
                                              "src": "623:19:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "id": 2843,
                                              "name": "_normalizedValue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2810,
                                              "src": "645:16:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                              }
                                            },
                                            "src": "623:38:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          }
                                        ],
                                        "id": 2845,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "622:40:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "618:44:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "id": 2847,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "617:46:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "id": 2848,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "616:48:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "570:94:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 2815,
                          "id": 2850,
                          "nodeType": "Return",
                          "src": "563:101:16"
                        }
                      ]
                    }
                  },
                  "id": 2858,
                  "nodeType": "IfStatement",
                  "src": "371:365:16",
                  "trueBody": {
                    "id": 2825,
                    "nodeType": "Block",
                    "src": "420:51:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2823,
                          "name": "FRACTION_MULTIPLIER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "441:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 2815,
                        "id": 2824,
                        "nodeType": "Return",
                        "src": "434:26:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "df443f75",
            "id": 2860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitNominalValue",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2812,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "335:8:16"
            },
            "parameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2810,
                  "mutability": "mutable",
                  "name": "_normalizedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2860,
                  "src": "306:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:22:16"
            },
            "returnParameters": {
              "id": 2815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2814,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2860,
                  "src": "357:3:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2813,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:5:16"
            },
            "scope": 2861,
            "src": "279:463:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2862,
        "src": "127:617:16"
      }
    ],
    "src": "63:682:16"
  },
  "legacyAST": {
    "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/InsurSplit.sol",
    "exportedSymbols": {
      "InsurSplit": [
        2861
      ]
    },
    "id": 2862,
    "license": "GNU General Public License v3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2796,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:16"
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/compli.fi/complifi-protocol/contracts/collateralSplits/CollateralSplitParent.sol",
        "file": "./CollateralSplitParent.sol",
        "id": 2797,
        "nodeType": "ImportDirective",
        "scope": 2862,
        "sourceUnit": 2725,
        "src": "88:37:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2798,
              "name": "CollateralSplitParent",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2724,
              "src": "150:21:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CollateralSplitParent_$2724",
                "typeString": "contract CollateralSplitParent"
              }
            },
            "id": 2799,
            "nodeType": "InheritanceSpecifier",
            "src": "150:21:16"
          }
        ],
        "contractDependencies": [
          2724,
          2768
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2861,
        "linearizedBaseContracts": [
          2861,
          2724,
          2768
        ],
        "name": "InsurSplit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2739
            ],
            "body": {
              "id": 2807,
              "nodeType": "Block",
              "src": "242:31:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "496e737572",
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "259:7:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_abaa08988dcd7d5d6007dd395b849abb828318bc81f5a7b6d017739745c76807",
                      "typeString": "literal_string \"Insur\""
                    },
                    "value": "Insur"
                  },
                  "functionReturnParameters": 2804,
                  "id": 2806,
                  "nodeType": "Return",
                  "src": "252:14:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "95d89b41",
            "id": 2808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2801,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "204:8:16"
            },
            "parameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:2:16"
            },
            "returnParameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2803,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2808,
                  "src": "227:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "226:15:16"
            },
            "scope": 2861,
            "src": "177:96:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2642
            ],
            "body": {
              "id": 2859,
              "nodeType": "Block",
              "src": "361:381:16",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "_normalizedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "374:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "394:24:16",
                      "subExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2817,
                              "name": "FRACTION_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2486,
                              "src": "396:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "416:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "396:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "id": 2820,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "395:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "374:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2826,
                          "name": "_normalizedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2810,
                          "src": "480:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "499:24:16",
                          "subExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2827,
                                  "name": "FRACTION_MULTIPLIER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2486,
                                  "src": "501:19:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 2828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "521:1:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "501:21:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "id": 2830,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "500:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "480:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2833,
                          "name": "_normalizedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2810,
                          "src": "527:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "546:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "527:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "480:67:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2856,
                      "nodeType": "Block",
                      "src": "681:55:16",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2852,
                              "name": "FRACTION_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2486,
                              "src": "702:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "724:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "702:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 2815,
                          "id": 2855,
                          "nodeType": "Return",
                          "src": "695:30:16"
                        }
                      ]
                    },
                    "id": 2857,
                    "nodeType": "IfStatement",
                    "src": "477:259:16",
                    "trueBody": {
                      "id": 2851,
                      "nodeType": "Block",
                      "src": "549:126:16",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 2839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2837,
                                    "name": "FRACTION_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2486,
                                    "src": "571:19:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 2838,
                                    "name": "FRACTION_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2486,
                                    "src": "593:19:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "src": "571:41:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "id": 2840,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "570:43:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      },
                                      "id": 2846,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 2841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "618:1:16",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "components": [
                                          {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            },
                                            "id": 2844,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 2842,
                                              "name": "FRACTION_MULTIPLIER",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2486,
                                              "src": "623:19:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "id": 2843,
                                              "name": "_normalizedValue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2810,
                                              "src": "645:16:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                              }
                                            },
                                            "src": "623:38:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          }
                                        ],
                                        "id": 2845,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "622:40:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "618:44:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "id": 2847,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "617:46:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "id": 2848,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "616:48:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "570:94:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 2815,
                          "id": 2850,
                          "nodeType": "Return",
                          "src": "563:101:16"
                        }
                      ]
                    }
                  },
                  "id": 2858,
                  "nodeType": "IfStatement",
                  "src": "371:365:16",
                  "trueBody": {
                    "id": 2825,
                    "nodeType": "Block",
                    "src": "420:51:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2823,
                          "name": "FRACTION_MULTIPLIER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "441:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 2815,
                        "id": 2824,
                        "nodeType": "Return",
                        "src": "434:26:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "df443f75",
            "id": 2860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitNominalValue",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2812,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "335:8:16"
            },
            "parameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2810,
                  "mutability": "mutable",
                  "name": "_normalizedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2860,
                  "src": "306:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:22:16"
            },
            "returnParameters": {
              "id": 2815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2814,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2860,
                  "src": "357:3:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2813,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:5:16"
            },
            "scope": 2861,
            "src": "279:463:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2862,
        "src": "127:617:16"
      }
    ],
    "src": "63:682:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "1604409002293": {
      "events": {},
      "links": {},
      "address": "0x737ddC630ec32141d1D41A044750afF63DF58433",
      "transactionHash": "0xc68368ec659e743a99d62d80e2f2893498de2e4f14a7b53bb36218aa93a5da00"
    },
    "1604409614609": {
      "events": {},
      "links": {},
      "address": "0x7E9C5f0b3a7FB7DC6dCCA8Bf2b9CE528aE59e71b",
      "transactionHash": "0x4f836dcf29f0ac7136c6b7da40f8801a56d5fa2617cbf05f1431388bd69b0101"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-03T13:23:36.534Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isCollateralSplit()": {
        "details": "Verifies that contract is a collateral split contract",
        "returns": {
          "_0": "true if contract is a collateral split contract"
        }
      },
      "split(address[],address[],uint256,uint256,uint256[],uint256[])": {
        "details": "Returns ranged value between 0 and 1 multiplied by 10 ^ 12",
        "params": {
          "_underlyingEndRoundHints": "specify for each oracle round of the end of Live period",
          "_underlyingStartRoundHints": "specify for each oracle round of the start of Live period"
        },
        "returns": {
          "_split": "primary asset class' share of collateral at settlement",
          "_underlyingEnds": "underlying values in the end of Live period",
          "_underlyingStarts": "underlying values in the start of Live period"
        }
      },
      "symbol()": {
        "details": "Should be resolved through CollateralSplitRegistry contract",
        "returns": {
          "_0": "collateral split specification symbol"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isCollateralSplit()": {
        "notice": "Proof of collateral split contract"
      },
      "split(address[],address[],uint256,uint256,uint256[],uint256[])": {
        "notice": "Calcs primary asset class' share of collateral at settlement."
      },
      "symbol()": {
        "notice": "Symbol of the collateral split"
      }
    },
    "version": 1
  }
}